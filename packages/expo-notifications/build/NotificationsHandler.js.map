{"version":3,"file":"NotificationsHandler.js","sourceRoot":"","sources":["../src/NotificationsHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgB,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC1E,OAAO,0BAAoD,MAAM,8BAA8B,CAAC;AAIhG,MAAM,OAAO,wBAAyB,SAAQ,UAAU;IAEtD,YAAY,cAAsB,EAAE,YAA0B;QAC5D,KAAK,CAAC,0BAA0B,EAAE,0CAA0C,cAAc,GAAG,CAAC,CAAC;QAC/F,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE,cAAc,EAAE,YAAY,EAAE,CAAC;IACnD,CAAC;CACF;AAiBD,iCAAiC;AACjC,MAAM,mBAAmB,GAAG,IAAI,YAAY,CAAC,0BAA0B,CAAC,CAAC;AAEzE,MAAM,2BAA2B,GAAG,sBAAsB,CAAC;AAC3D,MAAM,kCAAkC,GAAG,6BAA6B,CAAC;AAEzE,IAAI,kBAAkB,GAAwB,IAAI,CAAC;AACnD,IAAI,yBAAyB,GAAwB,IAAI,CAAC;AAE1D,MAAM,UAAU,uBAAuB,CAAC,QAA8B;IACpE,IAAI,kBAAkB,EAAE;QACtB,kBAAkB,CAAC,MAAM,EAAE,CAAC;QAC5B,kBAAkB,GAAG,IAAI,CAAC;KAC3B;IACD,IAAI,yBAAyB,EAAE;QAC7B,yBAAyB,CAAC,MAAM,EAAE,CAAC;QACnC,yBAAyB,GAAG,IAAI,CAAC;KAClC;IAED,kBAAkB,GAAG,mBAAmB,CAAC,WAAW,CAClD,2BAA2B,EAC3B,KAAK,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE;QAC7B,IAAI;YACF,MAAM,iBAAiB,GAAG,MAAM,QAAQ,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YAC1E,MAAM,0BAA0B,CAAC,uBAAuB,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;YAChF,sFAAsF;YACtF,2BAA2B;YAC3B,QAAQ,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;SAC9B;QAAC,OAAO,KAAK,EAAE;YACd,sFAAsF;YACtF,2BAA2B;YAC3B,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;SAC/B;IACH,CAAC,CACF,CAAC;IAEF,yBAAyB,GAAG,mBAAmB,CAAC,WAAW,CACzD,kCAAkC,EAClC,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,wBAAwB,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,CACjG,CAAC;AACJ,CAAC","sourcesContent":["import { EventEmitter, Subscription, CodedError } from '@unimodules/core';\nimport NotificationsHandlerModule, { NotificationBehavior } from './NotificationsHandlerModule';\n\ntype Notification = any;\n\nexport class NotificationTimeoutError extends CodedError {\n  info: { notification: Notification; id: string };\n  constructor(notificationId: string, notification: Notification) {\n    super('ERR_NOTIFICATION_TIMEOUT', `Notification handling timed out for ID ${notificationId}.`);\n    this.info = { id: notificationId, notification };\n  }\n}\n\nexport type NotificationHandlingError = NotificationTimeoutError | Error;\n\nexport interface NotificationDelegate {\n  handleNotification: (notification: Notification) => Promise<NotificationBehavior>;\n  handleSuccess?: (notificationId: string) => void;\n  handleError?: (error: NotificationHandlingError) => void;\n}\n\ntype HandleNotificationEvent = {\n  id: string;\n  notification: Notification;\n};\n\ntype HandleNotificationTimeoutEvent = HandleNotificationEvent;\n\n// Web uses SyntheticEventEmitter\nconst notificationEmitter = new EventEmitter(NotificationsHandlerModule);\n\nconst handleNotificationEventName = 'onHandleNotification';\nconst handleNotificationTimeoutEventName = 'onHandleNotificationTimeout';\n\nlet handleSubscription: Subscription | null = null;\nlet handleTimeoutSubscription: Subscription | null = null;\n\nexport function setNotificationDelegate(delegate: NotificationDelegate): void {\n  if (handleSubscription) {\n    handleSubscription.remove();\n    handleSubscription = null;\n  }\n  if (handleTimeoutSubscription) {\n    handleTimeoutSubscription.remove();\n    handleTimeoutSubscription = null;\n  }\n\n  handleSubscription = notificationEmitter.addListener<HandleNotificationEvent>(\n    handleNotificationEventName,\n    async ({ id, notification }) => {\n      try {\n        const requestedBehavior = await delegate.handleNotification(notification);\n        await NotificationsHandlerModule.handleNotificationAsync(id, requestedBehavior);\n        // TODO: Remove eslint-disable once we upgrade to a version that supports ?. notation.\n        // eslint-disable-next-line\n        delegate.handleSuccess?.(id);\n      } catch (error) {\n        // TODO: Remove eslint-disable once we upgrade to a version that supports ?. notation.\n        // eslint-disable-next-line\n        delegate.handleError?.(error);\n      }\n    }\n  );\n\n  handleTimeoutSubscription = notificationEmitter.addListener<HandleNotificationTimeoutEvent>(\n    handleNotificationTimeoutEventName,\n    ({ id, notification }) => delegate.handleError?.(new NotificationTimeoutError(id, notification))\n  );\n}\n"]}